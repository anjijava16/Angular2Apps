Angular2.

    - Angular2 is the Framework for UI Applications.

    - Angular2 Follows the MVC Design Pattern.

        M - Model  (TypeScript Members / JavaScript Variables)

        V - View   (HTML / HTML5 / JADE )

        C - Controller (JavaScript Functions /  Type Script Decorators)

    - In Genaral we will prepare Angular2 Applications By using TypeScript.

    - TypeScript is the SuperSet of JavaScript

    - Microsoft Identifies the "Issues / Limitations / Drawbacks" of AngularJS  and Provides the

      Sollutions in the Form of a TypeScript.

    - Angular2 is not the "Advanced Version AngularJS".

    - We Can Run the Angular Applications in the Following Platforms.

            1.Desktop

            2.Web

            3.Mobile Browser

            4.Mobile OS

                    Android

                    iPhone

    - Angular2 Apps are 5X faster than AngularJS Applications

    - We Can't Run the Angular2 Applications without Proper Environmental Setup.

    - In Genaral we will Run the Angular2 Application by using "lite server"

    - Angular2 Can Interact with the Multiple Technologies like AngularJS,

                                                                reactJS

                                                                Java

                                                                dotnet

                                                                NodeJS


Core Features Of Angular2

1.Single Page Applications

    - Loading the Target Web Pages to Source Web Pages , Without Refreshing the Whole "Source Web Page"

      Called as Single Page Application.


2. Routing

    - Loading the Target Web Pages to Source Web Page Called as Routing.


3.services

    - In genaral we will use services to Provide Common Business Logic to the Components.


4.Component

    - Component will tell how "view" should be present.

    - Component Acting as Glue Between View and Model.

    - In Genaral we will prepare Components By using TypeScript.

    - TypeScript Follows OOPS.


5. Module.

    - Collection Of Related Code (Tasks/ Business Logic) Called as Module.

    - Angular2 Application May be the More Than One Module.

    - We Can Provide The Communication Between the One Module to Another Module in Angular2 Application.


6.Pipes

        We Can Filter the data Accroding to Application Requirement.

        As a Angular2 Developer we can Customize the Pipes.


7.Angular2 Supports All most all the MIME Types.

    Ex.

        JSON

        XML

        CSV  (Coma Separated Value)

        Text

        --
        --
        --

     JSON.

           - JSON Stands for Java Script Object Notation.

           - JSON Used to Transfer the Data (Carring The Data) from one Network to Another Network.

           - JSON is Ligth Weigth Compared to XML.

           - Reading of JSON Files Are Simple Compared to XML Files.

           Notations in JSON.

            1. { }  ---> Objects in JSON

            2. [ ]  ---> Arrays in JSON

            3. Data ---> key & value

                - key & value separated by using ":"

                - each "key&value" pairs separated by using ","

                - we can store "objects into arrays" and viceversa.

                - we can store the data in "arrays" and "objects"



            Example_1.

            {
                "key1":"value1",
                "key2":"value2"

                    ---
                    ---
            }

            Example_2.
            {
               "emp":[
                        {'id':101,'name':'Hello_1','age':20},
                        {'id':102,'name':'Hello_2','age':22},
                        {'id':103,'name':'Hello_3','age':24},
                        {'id':104,'name':'Hello_4','age':26},
                        {'id':105,'name':'Hello_5','age':28}
                ]
            }


            var obj = function(){
                var x = {"key1":"Angular2" , "key2":"NodeJS" , "key3":"MongoDB"};
                function getX(){
                    return x.key1+"...."+x.key2+"...."+x.key3;
                }
            }

            var res = new obj().getX();
            console.log(res);



            class Test{
                var result = "";
                var x = [
                            {'id':101,'name':'Hello_1','age':20},
                            {'id':102,'name':'Hello_2','age':22},
                            {'id':103,'name':'Hello_3','age':24},
                            {'id':104,'name':'Hello_4','age':26},
                            {'id':105,'name':'Hello_5','age':28}
                        ];

                function my_fun(){

                    for(var i = 0; i < x.length(); i++){
                            var res_one  = x[i].id;
                            var res_two  = x[i].name;
                            var res_three  = x[i].age;
                            result = result+res_one+"\n"+res_two+"\n"+res_three;
                    }

                }

            }

            console.log(new Test().my_fun());


XML.

  XML Stands for Extensible Markup Language.

  XML Used to Carry the Data From One Network to Another Network.

  XML is Heavy Weigth Compared to JSON.

  Reading the Data From XML File difficult Compared to JSON.

  In Genaral we will Read the Data From XML Files By using Parsers.

        DOM Parser

        SAX Parser

        XML Pull Parser

    Ex.

        emp.xml
        -

        <emp>
            <eno>111</eno>
            <ename>Hello</ename>
            <eage>20</eage>
        </emp>

        var objFunction = function(){
          this.fun_one = function(){
                   Document d = Document.load("emp.xml");
                   var x = d.getDocumentElement().getElementsByTagName("eno").item(0).value();
                   var y = d.getDocumentElement().getElementsByTagName("ename").item(0).value();
                   var z = d.getDocumentElement().getElementsByTagName("eage").item(0).value();
                   return x+"..."+y+"..."+z;
             }
        };

        console.log(new objFunction().fun_one());

Environmental Setup.
    - The Softwares Required to Develop Angular2 Application called as Environmental Setup.


1.Download and Install the NodeJS.

    Website : https://nodejs.org/en/download/
    file    : node-v6.10.3-x64.msi


2.Download and Install the GIT.

    website : https://git-scm.com/downloads
    file    : Git-2.12.2.2-64-bit.exe


3. Download the Environmental Setup from angular2 wensite in the form of a zip file.

    website : http://www.angular2.com/
    file    : angular2-seed.zip


4. Download the IDE - VisualStudioCode (or) WebStrom.

    Website : https://code.visualstudio.com/
    File Name : VSCodeSetup-1.12.1.exe

    Website : https://www.jetbrains.com/webstorm/download/#section=windows
    File Name : Webstrom-2017.1.2.exe


5. Import the Environmental Setup to IDE.

6. Install the TypeScript

    npm install -g typescript

7. Run The Angular2 Application.

    >npm install
    >npm start
























